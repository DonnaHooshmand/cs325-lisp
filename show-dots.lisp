(defun show-dots (lst)
  (cond ((atom lst)
         (format t "~a" lst))
        (t
           (format t "(")
           (show-dots (car lst))
           (format t " . ")
           (show-dots (cdr lst))
           (format t ")"))))

(defun show-list (lst)
  (cond ((atom lst) (format t "~a" lst))
        (t (format t "[")
           (do ((ll lst (cdr ll)))
               ((atom (cdr ll))
                (show-list (car ll))
                (unless (null (cdr ll))
                        (format t " . ")
                        (show-list (cdr ll))))
             (show-list (car ll))
             (unless (null (cdr ll)) (format t " ")))
           (format t "]"))))

(show-list '(a b c . d))
(show-list '(a b c))
(show-list '(((a b) c) d))
(show-list '(a (b c)))
(show-list '(a . b))
(show-list 'a)
(show-list nil)
(show-list '(nil))
