(defun make-change (total &optional (lst '(25 10 5 1)))
  (let ((quotient 0) (curr total))
    (values-list (mapcar #'(lambda (x)
                             (multiple-value-setq (quotient curr) (floor curr x))
                             quotient)
                         lst))))

(make-change 50)
(make-change 99)
(make-change 65)
